#!/usr/bin/env bash
set -e

# get script dir https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
	DIR=$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)
	SOURCE=$(readlink "$SOURCE")
	[[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR=$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)
DOTFILES="$(dirname "$DIR")"

ARG=$1

touch /tmp/dotfiles-setup

case "$ARG" in
darwin)
	declare -a config=("darwin")
	;;
linux)
	declare -a config=("linux" "private-scripts/systemd")
	;;
common)
	declare -a config=("bin" "env" "common")
	;;
--single)
	config=("$2")
	;;
*)
	echo "Invalid argument; expected arguments: darwin/linux/common"
	exit 1
	;;
esac

pushd "$DOTFILES" >/dev/null

for util in "${config[@]}"; do
	if echo "$util" | grep -q "private-scripts"; then
		echo "going to private-scripts/directory"
		pushd "$DOTFILES/private-scripts" >/dev/null
		PRIVATE_SCRIPT=true
		util=$(echo "$util" | sed 's/private-scripts\///')
		target="$HOME"
	fi

	"$DOTFILES/scripts/stower" "$util" "$target"

	if [ "$PRIVATE_SCRIPT" = "true" ]; then
		echo "going back to $DOTFILES"
		popd >/dev/null
	fi
done

if [ "$ARG" = "--single" ]; then
	echo "$2 setup" >>/tmp/dotfiles-setup
else
	echo "$ARG setup" >>/tmp/dotfiles-setup
fi

popd >/dev/null
