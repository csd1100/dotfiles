#!/bin/bash
source ./utils

readonly SCRIPT_DIR=$(dirname $PWD)
readonly CONFIG_DIR="$HOME/.config"
readonly ZSH_HOME="$HOME/.oh-my-zsh"

declare -a config_common=("kitty" "neofetch" "nvim")
declare -a config_darwin=("skhd" "yabai")
declare -a config_linux=()
declare -a configs_in_home_dir=(".tmux.conf" ".vimrc" ".ideavimrc" ".dircolors")
declare -a zsh_customs=("custom/aliases" "custom/env-vars" "custom/functions" "custom/misc" "custom/overrides")
env_bins=($(ls "$SCRIPT_DIR/zsh/custom/overrides/bin"))

function init(){
    if [ -d $CONFIG_DIR ]; then
        log "${BLUE}$CONFIG_DIR ${NORMAL}exists"
    else
        mkdir $CONFIG_DIR
    fi

    unameOut="$(uname -s)"

    case "${unameOut}" in
        Linux*)     MACHINE=linux;;
        Darwin*)    MACHINE=darwin;;
        CYGWIN*)    MACHINE=cygwin;;
        MINGW*)     MACHINE=mingw;;
        *)          MACHINE="UNKNOWN:${unameOut}"
    esac

    if [ $MACHINE == "darwin" ]; then
        config=("${config_common[@]}" "${config_darwin[@]}")
    elif [ $MACHINE == "linux" ]; then
        config=("${config_common[@]}" "${config_linux[@]}")
    fi

    log "Running script on ${BLUE}$MACHINE${NORMAL}"
    log "CONFIG Dir -> ${BLUE}$CONFIG_DIR${NORMAL}"
    log "Dotfiles Dir -> ${BLUE}$SCRIPT_DIR${NORMAL}"
}

function linker(){
    init

    if [ -L "$HOME/dotfiles" ]; then
        log "${BLUE}$HOME/dotfiles ${NORMAL}is already linked"
    else
        log "Linking ${BLUE}$SCRIPT_DIR ->${GREEN} $HOME/dotfiles ${NORMAL}"
        ln -s $SCRIPT_DIR $HOME/dotfiles
    fi

    for util in "${config[@]}"; do
        link $CONFIG_DIR $util
    done

    for util in "${configs_in_home_dir[@]}"; do
        link $HOME $util
    done

    for util in "${zsh_customs[@]}"; do
        link $ZSH_HOME $util "$SCRIPT_DIR/zsh"
    done

    for util in "${env_bins[@]}"; do
        link $HOME/bin $util $SCRIPT_DIR/zsh/custom/overrides/bin
    done
}

function unlinker(){
    init
    for util in "${config[@]}"; do
        unlink $CONFIG_DIR $util
    done

    for util in "${configs_in_home_dir[@]}"; do
        unlink $HOME $util
    done

    for util in "${zsh_customs[@]}"; do
        unlink $ZSH_HOME $util "$SCRIPT_DIR/zsh"
    done

    for util in "${env_bins[@]}"; do
        unlink $HOME/bin $util $SCRIPT_DIR/zsh/custom/overrides/bin
    done
}

case "$1" in
    link*)     linker;;
    unlink*)   unlinker;;
    *)         log "UNKNOWN OPTION"; exit 127
esac
