#!/usr/bin/env zsh

# default editor
export EDITOR=nvim

# spaceship prompt zsh
export RPS1="%{$reset_color%}"

# DOCKER PS FORMAT
export DOCKER_FORMAT="\\nID\\t{{.ID}}\\nIMAGE\\t{{.Image}}\\nCOMMAND\\t{{.Command}}\\nCREATED\\t{{.RunningFor}}\\nSTATUS\\t{{.Status}}\\nPORTS\\t{{.Ports}}\\nNAMES\\t{{.Names}}\\n"

# GO
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"

# PATH
export PATH="/usr/local/go/bin:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/bin/helpers:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$GOBIN:$PATH"

#nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# CONFIG
export CONFIG="$HOME/.config"

# JDK
unameOut="$(uname -s)"
if [ $unameOut = "Darwin" ]; then
    export JAVA_11_HOME="$(locate -l 1 '/opt/homebrew/Cellar/openjdk@11/*/libexec/openjdk.jdk/Contents/Home')"
    export JAVA_17_HOME="$(locate -l 1 '/opt/homebrew/Cellar/openjdk@17/*/libexec/openjdk.jdk/Contents/Home')"
    export JAVA_19_HOME="$(locate -l 1 '/opt/homebrew/Cellar/openjdk@19/*/libexec/openjdk.jdk/Contents/Home')"
    export JAVA_VERSION="$(java --version | awk -F ' ' 'NR==1{print $2}')"
    export JAVA_HOME=`locate -l 1 "/opt/homebrew/Cellar/openjdk*/${JAVA_VERSION}/libexec/openjdk.jdk/Contents/Home"`
elif [ $unameOut = "Linux" ]; then
    export JAVA_11_HOME="$(locate -l 1 '/usr/lib/jvm/*java-11-openjdk*')"
    export JAVA_17_HOME="$(locate -l 1 '/usr/lib/jvm/*java-17-openjdk*')"
    export JAVA_19_HOME="$(locate -l 1 '/usr/lib/jvm/*java-19-openjdk*')"
    export JAVA_VERSION="$(java --version | awk -F ' ' 'NR==1{print $2}' | cut -d '.' -f1)"
    export JAVA_HOME=`locate -l 1 "/usr/lib/jvm/java-${JAVA_VERSION}-openjdk*"`
fi

# ssh-agent
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

# source overrides
if [ -f "$HOME/env/overrides/env-vars" ]
then
    source "$HOME/env/overrides/env-vars"
fi
