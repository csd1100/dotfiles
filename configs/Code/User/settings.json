{
  "workbench.colorTheme": "Vitesse Dark",
  "workbench.preferredDarkColorTheme": "Vitesse Dark",
  "workbench.preferredLightColorTheme": "Vitesse Light",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.productIconTheme": "icons-carbon",
  "workbench.colorCustomizations": {
    // color customization for Dark Modern
    "[Default Dark Modern]": {
      "tab.activeBackground": "#111",
      "tab.inactiveBackground": "#000",
      "editorGroupHeader.tabsBackground": "#000",
      "titleBar.activeBackground": "#000",
      "titleBar.inactiveBackground": "#010101",
      "activityBar.background": "#000",
      "sideBar.background": "#010101",
      "sideBarSectionHeader.background": "#111",
      "statusBar.background": "#111",
      "editor.background": "#111",
      "terminal.background": "#111"
    }
    // remove error indicators in case they are irritating
    //   "editorError.foreground": "#00000000",
    //   "editorWarning.foreground": "#00000000",
    //   "editorInfo.foreground": "#00000000"
  },

  "telemetry.telemetryLevel": "off",
  "gitlens.telemetry.enabled": false,
  "redhat.telemetry.enabled": false,
  "window.restoreWindows": "none",
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1500,
  "files.autoSaveWhenNoErrors": true,
  "editor.fontSize": 18,
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'cv01', 'cv02','cv06', 'cv08'", //aefgy
  "editor.fontFamily": "'CommitMono Nerd Font', 'JetbrainsMono Nerd Font Mono', 'VictorMono Nerd Font Mono', monospace",
  "editor.tabSize": 4,
  "editor.insertSpaces": true,
  "editor.renderWhitespace": "all",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.rulers": [80, 120, 140],
  "editor.wordWrap": "wordWrapColumn",
  "editor.wordWrapColumn": 100,
  "editor.stickyScroll.enabled": true,
  "editor.stickyTabStops": true,
  "editor.linkedEditing": true,
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.inlayHints.enabled": "off",
  "debug.toolBarLocation": "commandCenter",
  "debug.allowBreakpointsEverywhere": true,

  "vim.leader": "<space>",
  "vim.vimrc.enable": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": false,
  "vim.hlsearch": true,
  "vim.highlightedyank.enable": true,
  "vim.easymotion": true,
  "vim.camelCaseMotion.enable": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<ESC>"]
    },
    {
      "before": ["k", "k"],
      "after": ["<ESC>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // change focus between splits
    {
      "before": ["<leader>", "h"],
      "commands": ["workbench.action.navigateLeft"]
    },
    {
      "before": ["<leader>", "j"],
      "commands": ["workbench.action.navigateDown"]
    },
    {
      "before": ["<leader>", "k"],
      "commands": ["workbench.action.navigateUp"]
    },
    {
      "before": ["<leader>", "l"],
      "commands": ["workbench.action.navigateRight"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    // Surround Selection with <>
    {
      "before": ["<leader>", "<"],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "<${TM_SELECTED_TEXT}>"
          }
        }
      ]
    },
    // Surround Selection with ''
    {
      "before": ["'"],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "'${TM_SELECTED_TEXT}'"
          }
        }
      ]
    },
    // Surround Selection with ""
    {
      "before": ["\""],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "\"${TM_SELECTED_TEXT}\""
          }
        }
      ]
    },
    // Surround Selection with ''
    {
      "before": ["`"],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "`${TM_SELECTED_TEXT}`"
          }
        }
      ]
    },
    // Surround Selection with ()
    {
      "before": ["("],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "(${TM_SELECTED_TEXT})"
          }
        }
      ]
    },
    // Surround Selection with {}
    {
      "before": ["{"],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "{${TM_SELECTED_TEXT}}"
          }
        }
      ]
    },
    // Surround Selection with []
    {
      "before": ["["],
      "commands": [
        {
          "command": "editor.action.insertSnippet",
          "args": {
            "snippet": "[${TM_SELECTED_TEXT}]"
          }
        }
      ]
    }
  ],
  "vim.handleKeys": {
    "<C-f>": false,
    "<C-right>": false,
    "<C-left>": false
  },
  // To improve performance
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },

  "path-intellisense.autoTriggerNextSuggestion": true,
  "path-intellisense.showHiddenFiles": true,

  "json.schemas": [
    {
      "fileMatch": ["**/terrain.toml"],
      "url": "https://raw.githubusercontent.com/csd1100/terrainium/refs/heads/main/schema/terrain-schema.json"
    }
  ],

  "eslint.validate": [
    "typescript",
    "typescriptreact",
    "javascript",
    "javascriptreact"
  ],

  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.testExplorer": true,
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "black-formatter.args": ["--line-length", "120"],
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell"
  }
}
