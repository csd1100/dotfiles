---
- name: Dotfiles
  hosts: all
  become: false
  environment:
    DOTFILES: "{{ ansible_env.HOME }}/dotfiles/"
    PATH: "/usr/local/bin:/opt/homebrew/bin:{{ ansible_env.PATH }}"
  tags:
    - dotfiles
  tasks:
    - name: Stow Dotfiles
      tags:
        - link
        - work
      block:
        - name: Stow dotfiles linux
          when: ansible_system == 'Linux'
          ansible.builtin.command: ./scripts/dots-setup --linux
          args:
            chdir: ~/dotfiles/
            creates: "/tmp/dotfiles-setup--linux"
          register: linux
          changed_when: linux.rc != 0

        - name: Stow dotfiles Darwin
          when: ansible_os_family == 'Darwin'
          ansible.builtin.command: ./scripts/dots-setup --darwin
          args:
            chdir: ~/dotfiles/
            creates: "/tmp/dotfiles-setup--darwin"
          register: darwin
          changed_when: darwin.rc != 0

        - name: Stow dotfiles common
          ansible.builtin.command: ./scripts/dots-setup --common
          args:
            chdir: ~/dotfiles/
            creates: "/tmp/dotfiles-setup--common"
          register: common
          changed_when: common.rc != 0

    - name: Setup Fonts
      tags:
        - fonts
        - work
      block:
        - name: Linux fonts setup
          when: ansible_system == 'Linux'
          block:
            - name: Create a fonts directory if it does not exist (Linux)
              ansible.builtin.file:
                path: ~/.local/share/fonts
                state: directory
                mode: '0755'

            - name: Copy fonts (Linux)
              ansible.builtin.copy:
                src: ~/dotfiles/fonts/
                dest: ~/.local/share/fonts/
                remote_src: true
                mode: '0755'

        - name: Darwin fonts setup
          when: ansible_os_family == 'Darwin'
          block:
            - name: Create a fonts directory if it does not exist (Darwin)
              ansible.builtin.file:
                path: ~/Library/Fonts
                state: directory
                mode: '0755'

            - name: Copy fonts (Darwin)
              ansible.builtin.copy:
                src: ~/dotfiles/fonts/
                dest: ~/Library/Fonts
                remote_src: true
                mode: '0755'

    - name: Copy Wallpapers
      tags:
        - wallpaper
      block:
        - name: Get all files from ~/dotfiles/wallpapers/
          ansible.builtin.find:
            paths: ~/dotfiles/wallpapers/
          register: wallpapers

        - name: Copy all files from ~/dotfiles/wallpapers/
          ansible.builtin.copy:
            src: "{{ item.path }}"
            dest: ~/Pictures/Wallpapers/
            mode: '0666'
            remote_src: true
          with_items: "{{ wallpapers.files }}"

    # FIXME: fails when app-icons submodule not present
    - name: Linux Link Icons
      when: ansible_system == "Linux"
      tags:
        - icons
      ansible.builtin.file:
        src: "~/dotfiles/app-icons"
        dest: "~/.local/share/icons/app-icons"
        state: link

    - name: Zsh setup
      tags:
        - zsh
        - work
      block:
        - name: Change shell to zsh (shell)
          become: true
          ansible.builtin.user:
            name: "{{ ansible_user_id }}"
            shell: /bin/zsh

    - name: Create a work directory if it does not exist
      tags:
        - work
      ansible.builtin.file:
        path: ~/work
        state: directory
        mode: '0755'

    - name: Darwin start yabai, skhd, sketchybar
      when: ansible_os_family == "Darwin"
      tags:
        - de
      block:
        - name: Enable skhd
          ansible.builtin.command: skhd --start-service
          args:
            creates: ~/Library/LaunchAgents/com.koekeishiya.skhd.plist

        - name: Enable yabai
          ansible.builtin.command: yabai --start-service
          args:
            creates: ~/Library/LaunchAgents/com.koekeishiya.yabai.plist

        - name: Enable sketchybar
          ansible.builtin.command: brew services start sketchybar
          args:
            creates: ~/Library/LaunchAgents/homebrew.mxcl.sketchybar.plist
